.\" Manpage for liblist.
.TH man 3 "14 March 2021" "1.0" "liblist man page"
.SH NAME
.B
liblist
\-\- chained list manipulation functions
.SH LIBRARY
Chained list C library (liblist -llist)
.SH SYNOPSIS
.B
#include \<list.h\>
.SH DESCRIPTION
The
.B
list
library provides a bunch of simple and efficient functions to manipulate a basic chained list defined as
.P
typedef struct			s_list
.br
{
.br
	void *			data;
.br
	struct s_list *	next;
.br
}					t_list;
.SH STANDARDS
The
.B
list
library conforms to ISO/IEC 9899:1999 (``ISO C99'').
.SH LIST OF FUNCTIONS
.B
Function				Description
.br
-lst_new				allocates a list member
.br
-lst_push_front		inserts a new member in front of a list
.br
-lst_push_back			appends a new member at the end of a list
.br
-lst_push_at			inserts a new member at the desired position in a list
.br
-lst_create			initializes a new list from a size and an array of pointers
.br
-lst_clear			clears a list
.br
-lst_clear_a			at first call attaches a list to the function, at second call clears the attached list
.br
-lst_last				returns the last member of a list
.br
-lst_size				returns the size of a list
.br
-lst_rm_last			removes the last member of a list
.br
-lst_rm_first			removes the first member of a list
.br
-lst_rm_if			calls a check function on each member of a list, if the function returns 1 it removes the member
.br
-lst_rm_if_eq			compares each member of a list with a reference data, if the compare function returns 0 it removes the member
.br
-lst_rm_at			removes one member of a list with an index
.br
-lst_apply_all			applies a function to each member of a list
.br
-lst_apply_if			calls a check function on each member of a list, if the function returns 1 it applies the apply function to the member
.br
-lst_apply_if_eq		compares each member of a list with a reference data, if the compare function returns 0 it applies the apply function to the member
.br
-lst_at				returns the n'th member of a list
.br
-lst_sort				sorts a list from smallest to biggest using a custom compare function
.br
-lst_invert_sort		sorts a list from biggest to smallest using a custom compare function
.br
-lst_merge			merges two lists together
.br
-lst_merge_sorted		merges two lists together and sorts the final list from smallest to biggest
.br
-lst_merge_invert_sorted	merges two lists together and sorts the final list from biggest to smallest
.br
-lst_shuffle			shuffles all elements of a list
.br
-lst_dup				duplicates a list using a duplicate function on each member
.br
-lst_dup_from			duplicates a list from a position using a duplicate function on each member
.br
-lst_ndup				duplicates the n first members of a list using a duplicate function on each
.br
-lst_ndup_from			duplicates the n first members of a list from a position using a duplicate function on each
.br
-lst_rev				reverses a list (last element becomes the first)
