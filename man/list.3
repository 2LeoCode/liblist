.\" Manpage for liblist.
.Dd March 14, 2021
.Dt LIBLIST 3
.Sh NAME
.Nm liblist
.Nd chained list manipulation functions
.Sh LIBRARY
Chained list C library (liblist -llist)
.Sh SYNOPSIS
.In list.h
.Sh DESCRIPTION
The list library provides a bunch of simple and efficient functions to manipulate a basic chained list defined as
.Pp
.Bd -literal -offset indent
typedef struct			s_list
.br
{
.br
	void *			data;
.br
	struct s_list *	next;
.br
}					t_list;
.Ed
.Sh STANDARDS
The
.Nm
library conforms to
.St -isoC-99 .
.Sh LIST OF FUNCTIONS
.Bl -column "Description"
.It Sy "Function	Description"
.It "lst_new	allocates a new list member"
.It "lst_push_front	inserts a new member in front of a list"
.It "lst_push_back	appends a new member at the end of a list"
.It "lst_push_at	inserts a new member at the desired position in a list"
.It "lst_create	initializes a new list from a size and an array of pointers"
.It "lst_clear	clears a list"
.It "lst_clear_a	at first call attaches a list to the function, at second call clears the attached list"
.It "lst_last	returns the last member of a list"
.It "lst_size	returns the size of a list"
.It "lst_rm_last	removes the last member of a list"
.It "lst_rm_first	removes the first member of a list"
.It "lst_rm_if	calls a check function on each member of a list, if the function returns 1 it removes the member"
.It "lst_rm_if_eq	compares each member of a list with a reference data, if the compare function returns 0 it removes the member"
.It "lst_rm_at	removes one member of a list with an index"
.It "lst_apply_all	applies a function to each member of a list"
.It "lst_apply_if	calls a check function on each member of a list, if the function returns 1 it applies the apply function to the member"
.It "lst_apply_if_eq	"
.It " 	compares each member of a list with a reference data, if the compare function returns 0 it applies the apply function to the member"
.It "lst_at	returns the n'th member of a list"
.It "lst_prev"	returns the member before the current in a list
.It "lst_sort	sorts a list from smallest to biggest using a custom compare function"
.It "lst_invert_sort	sorts a list from biggest to smallest using a custom compare function"
.It "lst_merge	merges two lists together"
.It "lst_merge_sorted	"
.It " 	merges two lists together and sorts the final list from smallest to biggest"
.It "lst_merge_invert_sorted	"
.It " 	merges two lists together and sorts the final list from biggest to smallest"
.It "lst_shuffle	shuffles all elements of a list"
.It "lst_dup	duplicates a list using a duplicate function on each member"
.It "lst_dup_from	duplicates a list from a position using a duplicate function on each member"
.It "lst_ndup	duplicates the n first members of a list using a duplicate function on each"
.It "lst_ndup_from	duplicates the n first members of a list from a position using a duplicate function on each"
.It "lst_rev	reverses a list (last element becomes the first)"
